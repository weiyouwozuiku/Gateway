name: Go Build, Test and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REPO_NAME: "Gateway"
  DOCKER_IMAGE_NAME: "gateway"

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: echo ${{ env.GITHUB_TAG_NAME }}

      - name: Set tag name
        id: tag_name
        run: |
          TAG_NAME=$(echo ${GITHUB_REF##*/})_$(date +%s)
          echo "TAG_NAME is $TAG_NAME"
          echo "::set-output name=tag_name::$TAG_NAME"
        shell: bash

      - name: Use tag name in next step
        run: |
          echo "Tag name is: ${{ steps.tag_name.outputs.tag_name }}"
        shell: bash

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'

      - name: Get dependencies
        run: |
          go mod tidy
          go mod download

      - name: Run tests
        run: |
          echo $GITHUB_WORKSPACE
          pwd
          # go test ./...

      - name: Compress Source Code
        run: |
          cd ..
          tar -czvf source_code.tar.gz $GITHUB_WORKSPACE
          zip -r source_code.zip $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE

      - name: Build binary
        run: GOOS=linux GOARCH=amd64 go build -o ${{env.REPO_NAME}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PULL_SECRET }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
#
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.tag_name }}
          release_name: ${{ steps.tag_name.outputs.tag_name }}
          body: Automated release created by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{env.REPO_NAME}}
          asset_name: ${{env.REPO_NAME}}
          asset_content_type: application/octet-stream
