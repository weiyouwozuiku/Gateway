name: Go Build, Test and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REPO_NAME: "Gateway"
  DOCKER_IMAGE_NAME: "gateway"

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'

      - name: Get dependencies
        run: |
          go mod tidy
          go mod download

      - name: Run tests
        run: |
          echo $GITHUB_WORKSPACE
          pwd
          # go test ./...

      - name: Compress Source Code
        run: |
          cd ..
          tar -czvf source_code.tar.gz $GITHUB_WORKSPACE
          zip -r source_code.zip $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE

      - name: Build binary
        run: GOOS=linux GOARCH=amd64 go build -o ${{env.REPO_NAME}}

#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKER_PULL_SECRET }}
#
#      - name: Build and push Docker images
#        uses: docker/build-push-action@v4
#        with:
#          push: true
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $(echo ${GITHUB_REF##*/})_$(date +%s)
          release_name: Release $(echo ${GITHUB_REF##*/})_$(date +%s)
          body: Automated release created by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{env.REPO_NAME}}
          asset_name: ${{env.REPO_NAME}}
          asset_content_type: application/octet-stream

      - name: Upload Source Code Package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../source_code.tar.gz
          asset_name: "Source code.tar.gz"
          asset_content_type: application/gzip

      - name: Upload Source Code Package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../source_code.zip
          asset_name: "Source code.zip"
          asset_content_type: application/zip